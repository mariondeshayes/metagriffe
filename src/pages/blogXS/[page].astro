---
import PostsXS from "../../components/cmp/PostsXS.astro";

export async function getStaticPaths({ paginate }) {
  let QUERYBLOG, URLBLOG;

  //FETCH PAGE, CAT CONTENT
  QUERYBLOG = encodeURIComponent(
    `*[_type == "post"]{h1,abstract,img{alt,'src':asset->url},cat,_createdAt,slug}`,
  );

  // Compose the URL for your project's endpoint and add the query
  URLBLOG = `https://${
    import.meta.env.PROJECT_ID
  }.api.sanity.io/v2021-10-21/data/query/${
    import.meta.env.DATASET
  }?query=${QUERYBLOG}`;
  // fetch the content
  let data = await fetch(URLBLOG)
    .then((res) => res.json())
    .then(({ result }) => {
      return result;
    })
    .catch((err) => console.error(err));
  // Order the blog posts info by date of creation desc

  //Sort by date here since GROQ isn't working...
  data.sort(function (a, b) {
    const dateA = new Date(a._createdAt);
    const dateB = new Date(b._createdAt);
    return dateB - dateA;
  });

  // Génère des pages à partir de notre tableau, 3 par page
  return paginate(data.slice(6), { pageSize: 3 });
}
// Toutes les données paginées sont passées dans la propriété "page"
const { page } = Astro.props;

const endProperty = {
  "data-container": ".js-infinite-scroll__content",
  ...(page.currentPage != page.lastPage && {
    "data-path": "/blogXS/{n}",
  }),
};
---

<div class=`js-infinite-scroll js-infinite-scroll__content` {...endProperty}>
  {
    page.data &&
      page.data.map((post) => (
        <PostsXS
          slug={`/${post.slug}`}
          h1={post.h1}
          img={post.img}
          cat={post.cat}
        />
      ))
  }
</div>
