---
import { PortableText } from "astro-portabletext";

const composants = await Astro.glob("./cmp/*.astro");

const { data, context } = Astro.props;
let value;
if (data) {
  value = data.map((e) => ({ ...e, ...context }));
}
---

<PortableText
  value={value}
  components={{
    type: {
      hero: composants.find((cmp) => cmp.default.name === "Hero").default,
      valeurs: composants.find((cmp) => cmp.default.name === "Valeurs").default,
      services: composants.find((cmp) => cmp.default.name === "Services")
        .default,
      feature: composants.find((cmp) => cmp.default.name === "Feature").default,
      cta: composants.find((cmp) => cmp.default.name === "Cta").default,
      title: composants.find((cmp) => cmp.default.name === "Title").default,
      faq: composants.find((cmp) => cmp.default.name === "FAQ").default,
      contact: composants.find((cmp) => cmp.default.name === "Contact").default,
      etapes: composants.find((cmp) => cmp.default.name === "Etapes").default,
      allposts: composants.find((cmp) => cmp.default.name === "PostsInfiniteScroll").default,
    },
    },
  }}
/>
